{
    "docs": [
        {
            "location": "/", 
            "text": "Agile\n\n\nWhat is Agile? \n2\n\n\nAgile methodology is an alternative to traditional project management, typically used in software development. It helps teams respond to unpredictability through incremental, iterative work cadences, known as sprints. Agile methodologies are an alternative to waterfall, or traditional sequential development.\n\n\nAgile Manifesto\n\n\n\n\nScrum Framework\n\n\n\n\nA manifesto for small teams doing important work \n4\n\n\nWhat is the difference between Scrum and Agile Development? \n1\n\n\nScrum is just one of the many iterative and incremental agile software development method. You can find here a very detailed description of the process.\n\n\nIn the SCRUM methodology a sprint is the basic unit of development. Each sprint starts with a planning meeting, where the tasks for the sprint are identified and an estimated commitment for the sprint goal is made. A Sprint ends with a review or retrospective meeting where the progress is reviewed and lessons for the next sprint are identified. During each sprint, the team creates finished portions of a product.\n\n\nIn the Agile methods each iteration involves a team working through a full software development cycle, including planning, requirements analysis, design, coding, unit testing, and acceptance testing when a working product is demonstrated to stakeholders.\n\n\nAgile Stories and Teasers\n\n\n\n\n2011, PRESENTATION: HOW OUR TEAM LIVES SCRUM\n\n\n2010, The real life of a Scrum team \u2013 with photos\n\n\n2009, How Scrum Helped Our Team\n\n\n\n\nAgile Tools \n3\n\n\n\n\nAgilefant (4/ 3/ 3)\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is the difference between Scrum and Agile Development?\n\n\n\n\n\n\nAgile Methodology\n\n\n\n\n\n\nagile-tools.net/\n\n\n\n\n\n\nA manifesto for small teams doing important work", 
            "title": "Home"
        }, 
        {
            "location": "/#agile", 
            "text": "", 
            "title": "Agile"
        }, 
        {
            "location": "/#what-is-agile-2", 
            "text": "Agile methodology is an alternative to traditional project management, typically used in software development. It helps teams respond to unpredictability through incremental, iterative work cadences, known as sprints. Agile methodologies are an alternative to waterfall, or traditional sequential development.", 
            "title": "What is Agile? 2"
        }, 
        {
            "location": "/#agile-manifesto", 
            "text": "", 
            "title": "Agile Manifesto"
        }, 
        {
            "location": "/#scrum-framework", 
            "text": "A manifesto for small teams doing important work  4", 
            "title": "Scrum Framework"
        }, 
        {
            "location": "/#what-is-the-difference-between-scrum-and-agile-development-1", 
            "text": "Scrum is just one of the many iterative and incremental agile software development method. You can find here a very detailed description of the process.  In the SCRUM methodology a sprint is the basic unit of development. Each sprint starts with a planning meeting, where the tasks for the sprint are identified and an estimated commitment for the sprint goal is made. A Sprint ends with a review or retrospective meeting where the progress is reviewed and lessons for the next sprint are identified. During each sprint, the team creates finished portions of a product.  In the Agile methods each iteration involves a team working through a full software development cycle, including planning, requirements analysis, design, coding, unit testing, and acceptance testing when a working product is demonstrated to stakeholders.", 
            "title": "What is the difference between Scrum and Agile Development? 1"
        }, 
        {
            "location": "/#agile-stories-and-teasers", 
            "text": "2011, PRESENTATION: HOW OUR TEAM LIVES SCRUM  2010, The real life of a Scrum team \u2013 with photos  2009, How Scrum Helped Our Team", 
            "title": "Agile Stories and Teasers"
        }, 
        {
            "location": "/#agile-tools-3", 
            "text": "Agilefant (4/ 3/ 3)       What is the difference between Scrum and Agile Development?    Agile Methodology    agile-tools.net/    A manifesto for small teams doing important work", 
            "title": "Agile Tools 3"
        }, 
        {
            "location": "/team/", 
            "text": "Scrum Team \n1\n\n\nWithin the Scrum Framework three roles are defined:\n\n\n\n\nProduct Owner\n\n\nScrum Master\n\n\nDevelopment team\n\n\n\n\nEach of these roles has a defined set of responsibilities and only if they fulfill these responsibilities, closely interact and work together they can finish a project successfully.\n\n\n\n\nScrum Roles \n Stakeholders\n\n\nProduct Owner\n\n\nOne of the most important things for the success of scrum is the role of the Product Owner, who serves as an interface between the team and other involved parties (stakeholders). It can be said that in companies that use scrum, the tasks and responsibilities of the particular Product Owner are never the same. Starting with the choice of that person provided with the proper and necessary skills, make them take specific trainings, up to the responsibility they take; the role of the Product Owner \u2013short PO- is the most complex one regarding that procedure.\n\n\nOften the PO has to \u201cfight\u201d on both sides. Whereas the team can work a certain fraction of time (time boxed) \u201cprotected\u201d by the Scrum Master, the Product Owner often needs to deal with marketing, management or the customers in order to be able to present the software requirements (User Stories) quite precisely to the team (see the box \u201ccriteria for User Stories).\n\n\nFurthermore the Product Owner is responsible for the return on investment (ROI). He validates the solutions and verifies whether the quality is acceptable or not from the end-users\u2019 point of view. He also has to decide over the importance of single features in order to prioritize these in their treatment and he has to tell the team what the product should look like in the end (product vision). Since one of the teams\u2019 tasks is to work effectively, the Product Owner must react fast on call-backs. Hence he fulfills the role of a communicator, as he must be in contact with all stakeholders, sponsors and last but not least the team throughout a project. After all it is his task to coordinate the financial side of the product development, which is successful through his continuous work and prioritizing the advancing tasks (Product Backlog). All these diverse requests demonstrate how important the selection of the \u201cright\u201d person for the role of the PO is for the success of a project.\n\n\nThe nomenclature is definite. The Product Owner is at Scrum not only the manager of a product, but also the Owner and therefore he is the one responsible for the correct creation of a product. Being a Product Owner means:\n\n\nYou are responsible for the success of the outcome of the product delivered by the team. You make Business decisions of importance and priorities. You deliver the vision of the product to the team. You prepare the User Stories for the team of development. You should possess severe domain knowledge. You validate the outcomes and test them for their quality. You react promptly on callbacks. You communicate on a continual base with all Stakeholders, financiers and the team. You control the financial side of the project.\n\n\nScrum Master\n\n\nThe most obvious difference between a team leader and a Scrum Master is represented by the name itself though. Whereas one is leading the team and sets the tasks, the other one is in charge of observing that the team obeys the rules and realizes the method of Scrum entirely. The Scrum Master does not interfere into the decisions of the team regarding specifically the development, but rather is there for the team as an advisor. He only interferes actively when anybody of the team or any other participant of a project (Stakeholder) does not obey the rules of Scrum. Whereas a team leader often gives requirements and takes responsibility for the completion of those, an experienced Scrum Master gives only impulses and advises to the team to lead the correct way, to use the right method or to choose the right technology. In fine the Scrum Master acts more like a Team Coach than a team leader.\n\n\nScrumMaster and Impediments\n\n\nAnother important task of the Scrum Master is to get rid of all possible impediments that might disturb the work of the team. Usually problems can be classified in three different categories. The first one is problems the team cannot solve. E.g. the team cannot do any kind of performance-tests because the hardware is not in place, the IT-department does not provide Bug tracker, or the ordered software just still did not reach the team. Another impediment could be that the marketing or sales manager was there again demanding that another feature gets integrated \u201cquickly\u201d.\n\n\nThe second one regards impediments that result through the organizational structure or strategic decisions. Maybe the office is not capable of handling the important meetings or teamwork \u2013 e.g. because there is no media. One mistake that occurs quite often regards the problem that the Scrum Master is seen as the personnel responsible for the team members. This is often because of the classical role of a project leader, but using Scrum it only leads to conflicts of interests and is strongly against its major principle: The team owns a management role in the method of Scrum and is therefore coequal with the Scrum Master and the Product Owner. Another aspect can be the insufficient bandwidth of the internet for the new project.\n\n\nThe third problem refers to the individuals. Someone needs a hand with the debugging. Another one cannot solve a task alone and needs someone else for the pair programming. Someone else has to reset his computer....\n\n\nEven though a Scrum Master can\u2019t and shouldn\u2019t realize some requirements himself, he is still responsible for solving and getting rid of problems and needs to give proper criteria. This task often takes up a lot of time and requires great authority and backbone. The Scrum Master has to create an optimal working-condition for the team and is responsible for this condition to be retained, in order to meet the goals of every sprint \u2013 i.e. for a short sprint the defined requirements.\n\n\nScrum Development Team\n\n\nDifferent from other methods, in Scrum a team is not just the executive organ that receives its tasks from the project leader, it rather decides self dependent, which requirements or User Stories it can accomplish in one sprint. It constructs the tasks and is responsible for the permutation of those \u2013 the team becomes a manager. This new self-conception of the team and the therewith aligned tasks and responsibilities necessarily change the role of the team leader/project leader. The Scrum Master does not need to delegate all the work and to plan the project, he rather takes care that the team meets all conditions in order to reach the self-made goals. He cleans off any impediments, provides an ideal working environment for the team, coaches and is responsible for the observation of Scrum-rules \u2013 he becomes the so-called Servant Leader.\n\n\nThe changed role perception is one of the most important aspects, when someone wants to understand Scrum and with the intent to introduce it in their own company.\n\n\n\n\n\n\n\n\n\n\nScrum Roles", 
            "title": "Team"
        }, 
        {
            "location": "/team/#scrum-team-1", 
            "text": "Within the Scrum Framework three roles are defined:   Product Owner  Scrum Master  Development team   Each of these roles has a defined set of responsibilities and only if they fulfill these responsibilities, closely interact and work together they can finish a project successfully.   Scrum Roles   Stakeholders", 
            "title": "Scrum Team 1"
        }, 
        {
            "location": "/team/#product-owner", 
            "text": "One of the most important things for the success of scrum is the role of the Product Owner, who serves as an interface between the team and other involved parties (stakeholders). It can be said that in companies that use scrum, the tasks and responsibilities of the particular Product Owner are never the same. Starting with the choice of that person provided with the proper and necessary skills, make them take specific trainings, up to the responsibility they take; the role of the Product Owner \u2013short PO- is the most complex one regarding that procedure.  Often the PO has to \u201cfight\u201d on both sides. Whereas the team can work a certain fraction of time (time boxed) \u201cprotected\u201d by the Scrum Master, the Product Owner often needs to deal with marketing, management or the customers in order to be able to present the software requirements (User Stories) quite precisely to the team (see the box \u201ccriteria for User Stories).  Furthermore the Product Owner is responsible for the return on investment (ROI). He validates the solutions and verifies whether the quality is acceptable or not from the end-users\u2019 point of view. He also has to decide over the importance of single features in order to prioritize these in their treatment and he has to tell the team what the product should look like in the end (product vision). Since one of the teams\u2019 tasks is to work effectively, the Product Owner must react fast on call-backs. Hence he fulfills the role of a communicator, as he must be in contact with all stakeholders, sponsors and last but not least the team throughout a project. After all it is his task to coordinate the financial side of the product development, which is successful through his continuous work and prioritizing the advancing tasks (Product Backlog). All these diverse requests demonstrate how important the selection of the \u201cright\u201d person for the role of the PO is for the success of a project.  The nomenclature is definite. The Product Owner is at Scrum not only the manager of a product, but also the Owner and therefore he is the one responsible for the correct creation of a product. Being a Product Owner means:  You are responsible for the success of the outcome of the product delivered by the team. You make Business decisions of importance and priorities. You deliver the vision of the product to the team. You prepare the User Stories for the team of development. You should possess severe domain knowledge. You validate the outcomes and test them for their quality. You react promptly on callbacks. You communicate on a continual base with all Stakeholders, financiers and the team. You control the financial side of the project.", 
            "title": "Product Owner"
        }, 
        {
            "location": "/team/#scrum-master", 
            "text": "The most obvious difference between a team leader and a Scrum Master is represented by the name itself though. Whereas one is leading the team and sets the tasks, the other one is in charge of observing that the team obeys the rules and realizes the method of Scrum entirely. The Scrum Master does not interfere into the decisions of the team regarding specifically the development, but rather is there for the team as an advisor. He only interferes actively when anybody of the team or any other participant of a project (Stakeholder) does not obey the rules of Scrum. Whereas a team leader often gives requirements and takes responsibility for the completion of those, an experienced Scrum Master gives only impulses and advises to the team to lead the correct way, to use the right method or to choose the right technology. In fine the Scrum Master acts more like a Team Coach than a team leader.", 
            "title": "Scrum Master"
        }, 
        {
            "location": "/team/#scrummaster-and-impediments", 
            "text": "Another important task of the Scrum Master is to get rid of all possible impediments that might disturb the work of the team. Usually problems can be classified in three different categories. The first one is problems the team cannot solve. E.g. the team cannot do any kind of performance-tests because the hardware is not in place, the IT-department does not provide Bug tracker, or the ordered software just still did not reach the team. Another impediment could be that the marketing or sales manager was there again demanding that another feature gets integrated \u201cquickly\u201d.  The second one regards impediments that result through the organizational structure or strategic decisions. Maybe the office is not capable of handling the important meetings or teamwork \u2013 e.g. because there is no media. One mistake that occurs quite often regards the problem that the Scrum Master is seen as the personnel responsible for the team members. This is often because of the classical role of a project leader, but using Scrum it only leads to conflicts of interests and is strongly against its major principle: The team owns a management role in the method of Scrum and is therefore coequal with the Scrum Master and the Product Owner. Another aspect can be the insufficient bandwidth of the internet for the new project.  The third problem refers to the individuals. Someone needs a hand with the debugging. Another one cannot solve a task alone and needs someone else for the pair programming. Someone else has to reset his computer....  Even though a Scrum Master can\u2019t and shouldn\u2019t realize some requirements himself, he is still responsible for solving and getting rid of problems and needs to give proper criteria. This task often takes up a lot of time and requires great authority and backbone. The Scrum Master has to create an optimal working-condition for the team and is responsible for this condition to be retained, in order to meet the goals of every sprint \u2013 i.e. for a short sprint the defined requirements.", 
            "title": "ScrumMaster and Impediments"
        }, 
        {
            "location": "/team/#scrum-development-team", 
            "text": "Different from other methods, in Scrum a team is not just the executive organ that receives its tasks from the project leader, it rather decides self dependent, which requirements or User Stories it can accomplish in one sprint. It constructs the tasks and is responsible for the permutation of those \u2013 the team becomes a manager. This new self-conception of the team and the therewith aligned tasks and responsibilities necessarily change the role of the team leader/project leader. The Scrum Master does not need to delegate all the work and to plan the project, he rather takes care that the team meets all conditions in order to reach the self-made goals. He cleans off any impediments, provides an ideal working environment for the team, coaches and is responsible for the observation of Scrum-rules \u2013 he becomes the so-called Servant Leader.  The changed role perception is one of the most important aspects, when someone wants to understand Scrum and with the intent to introduce it in their own company.      Scrum Roles", 
            "title": "Scrum Development Team"
        }, 
        {
            "location": "/artifacts/", 
            "text": "Product Backlog \n1\n\n\n\n\n\n\nForce-ranked list of desired functionality\n\n\nVisible to all stakeholders\n\n\nAny stakeholder (including the Team) can add items\n\n\nConstantly re-prioritized by the Product Owner\n\n\nItems at top are more granular than items at bottom\n\n\nMaintained during the Backlog Refinement Meeting\n\n\n\n\n\n\nProduct Backlog Item (PBI) \n1\n\n\n\n\n\n\nSpecifies the what more than the how of a customer-centric feature\n\n\nOften written in User Story form\n\n\nHas a product-wide definition of done to prevent technical debt\n\n\nMay have item-specific acceptance criteria\n\n\nEffort is estimated by the team, ideally in relative units (e.g., story points)\n\n\nEffort is roughly 2-3 people 2-3 days, or smaller for advanced teams\n\n\n\n\nSprint Backlog \n1\n\n\n\n\nConsists of committed PBIs negotiated between the team and the Product Owner during the Sprint Planning Meeting\n\n\nScope commitment is fixed during Sprint Execution\n\n\nInitial tasks are identified by the team during Sprint Planning Meeting\n\n\nTeam will discover additional tasks needed to meet the fixed scope commitment during Sprint execution\n\n\nVisible to the team\n\n\nReferenced during the Daily Scrum Meeting\n\n\nSprint Task \n1\n\n\n\n\nSpecifies how to achieve the PBI\u2019s what\n\n\nRequires one day or less of work\n\n\nRemaining effort is re-estimated daily, typically in hours\n\n\nDuring Sprint Execution, a point person may volunteer to be primarily responsible for a task\n\n\nOwned by the entire team; collaboration is expected\n\n\nPersonal Sprint Board with Sticky Notes (Windows)\n\n\n\n\nSprint Burndown Chart \n1\n\n\n\n\n\n\nIndicates total remaining team task hours within one Sprint\n\n\nRe-estimated daily, thus may go up before going down\n\n\nIntended to facilitate team self-organization\n\n\nFancy variations, such as itemizing by point person or adding trend lines, tend to reduce effectiveness at encouraging collaboration\n\n\nSeemed like a good idea in the early days of Scrum, but in practice has often been misused as a management report, inviting intervention. The ScrumMaster should discontinue use of this chart if it becomes an impediment to team self-organization.\n\n\n\n\n\n\nProduct / Release Burndown Chart\n\n\n\n\n\n\nTracks the remaining Product Backlog effort from one Sprint to the next\n\n\nMay use relative units such as Story Points for Y axis\n\n\nDepicts historical trends to adjust forecasts\n\n\n\n\n\n\n\n\n\n\n\n\nscrum-reference-card", 
            "title": "Artifacts"
        }, 
        {
            "location": "/artifacts/#product-backlog-1", 
            "text": "Force-ranked list of desired functionality  Visible to all stakeholders  Any stakeholder (including the Team) can add items  Constantly re-prioritized by the Product Owner  Items at top are more granular than items at bottom  Maintained during the Backlog Refinement Meeting", 
            "title": "Product Backlog 1"
        }, 
        {
            "location": "/artifacts/#product-backlog-item-pbi-1", 
            "text": "Specifies the what more than the how of a customer-centric feature  Often written in User Story form  Has a product-wide definition of done to prevent technical debt  May have item-specific acceptance criteria  Effort is estimated by the team, ideally in relative units (e.g., story points)  Effort is roughly 2-3 people 2-3 days, or smaller for advanced teams", 
            "title": "Product Backlog Item (PBI) 1"
        }, 
        {
            "location": "/artifacts/#sprint-backlog-1", 
            "text": "Consists of committed PBIs negotiated between the team and the Product Owner during the Sprint Planning Meeting  Scope commitment is fixed during Sprint Execution  Initial tasks are identified by the team during Sprint Planning Meeting  Team will discover additional tasks needed to meet the fixed scope commitment during Sprint execution  Visible to the team  Referenced during the Daily Scrum Meeting", 
            "title": "Sprint Backlog 1"
        }, 
        {
            "location": "/artifacts/#sprint-task-1", 
            "text": "Specifies how to achieve the PBI\u2019s what  Requires one day or less of work  Remaining effort is re-estimated daily, typically in hours  During Sprint Execution, a point person may volunteer to be primarily responsible for a task  Owned by the entire team; collaboration is expected", 
            "title": "Sprint Task 1"
        }, 
        {
            "location": "/artifacts/#personal-sprint-board-with-sticky-notes-windows", 
            "text": "", 
            "title": "Personal Sprint Board with Sticky Notes (Windows)"
        }, 
        {
            "location": "/artifacts/#sprint-burndown-chart-1", 
            "text": "Indicates total remaining team task hours within one Sprint  Re-estimated daily, thus may go up before going down  Intended to facilitate team self-organization  Fancy variations, such as itemizing by point person or adding trend lines, tend to reduce effectiveness at encouraging collaboration  Seemed like a good idea in the early days of Scrum, but in practice has often been misused as a management report, inviting intervention. The ScrumMaster should discontinue use of this chart if it becomes an impediment to team self-organization.", 
            "title": "Sprint Burndown Chart 1"
        }, 
        {
            "location": "/artifacts/#product-release-burndown-chart", 
            "text": "Tracks the remaining Product Backlog effort from one Sprint to the next  May use relative units such as Story Points for Y axis  Depicts historical trends to adjust forecasts       scrum-reference-card", 
            "title": "Product / Release Burndown Chart"
        }, 
        {
            "location": "/meetings/", 
            "text": "Meetings\n\n\nScrum Meetings \n1\n\n\n\n\nSprint Planning\n\n\nDaily Scrum\n\n\nSprint Review\n\n\nSprint Retrospective\n\n\nProduct Backlog Refinement\n\n\n\n\n\n\nSprint Planning \n1\n\n\n\n\nGoals\n\n\n\u2013 Discuss and make sure the whole team understands the upcoming Work Items to deliver (quantity, complexity)\n\u2013 Select the work items to achieve during the Sprint (Create the Sprint Backlog)\n\u2013 Rationally forecast the amount of work and commit to accomplish it\n\u2013 Plan how this work will be done\n\n\nAttendees\n\n\n\n\n1st part (what?): Whole team\n\n\n2nd part (how?): Even though the product owner does not attend, he should remain to answer questions.\n\n\n\n\nDuration\n\n\nThe meeting is time-boxed: 2 hours / week of sprint duration.\n\n\nTypical meeting roadmap\n\n\nIn Scrum, the sprint planning meeting has two parts:\n\n\n1. What work will be done?\n\n\n\u2013 the Product Owner presents the ordered product backlog items to the development team\n\u2013 the whole Scrum team collaborates to understand the work and select work items starting from the top of the product backlog\n\n\n2. How will the work be accomplished?\n\n\n\u2013 the development team discusses to define how to produce the next product increment in accordance with the current Definition of Done\n\u2013 The team does just the sufficient design and planning to be confident of completing the work during the sprint\n\u2013 The upcoming work to be done in the early days is broken down into small tasks of one day or less\n\u2013 Work to be done later may be left in larger units to be decomposed later (this is called Just-In-Time planning in Lean)\n\u2013 Final commitment to do the work\n\n\nImportant to know / Good practices\n\n\n\u2013 The development team is alone responsible to determine the number of product backlog items that will be \u201cpulled\u201d to the sprint. Nobody else should interfere in that decision, based on the current state of the project, the past performance and the current availability of the team.\n\u2013 It is a good practice to set a sprint goal to keep focus on the big picture and not on the details.\n\u2013 It is necessary for the Sprint planning meeting success that the product backlog is well ordered and refined. This is the Product Owner\u2019s responsibility.\n\u2013 The development team is responsible to decide how to do the work (self-organization).\n\u2013 There is no point, especially at the beginning, to try to make hourly estimates of the work and compare them to availability. This habit is inherited from traditional PM methods and may be counterproductive, as reduces ownership of the team\u2019s commitments. The best for the team is to intuitively estimate its own capacity to do the work, reduce the amount of committed work to deliver, and get experienced at estimating during the first sprints.\n\n\nDaily Scrum \n1\n\n\n\n\nGoals\n\n\n\n\nEnsure, every day, at the same palace, that the team is on track for attaining the sprint goal and that team members are all on the same page.\n\n\nSpot blocks and problems. The \nScrum Master\n can resolve impediments that are beyond the team\u2019s control.\n\n\nThis is NOT a management reporting meeting to anyone. The \nteam members\n communicate together as a team.\n\n\nBased on what comes up in the meeting, the \ndevelopment team\n reorganizes the work as needed to accomplish the sprint goal.\n\n\nCreate transparency, trust and better performance. Build the team\u2019s self-organization and self-reliance.\n\n\n\n\nAttendees\n\n\n\n\nDevelopment Team + Scrum Master.\n\n\nThe Product Owner presence is not required but it I almost always interesting for him / here to be present, especially to clarify requirements if needed.\n\n\nOther stakeholders can attend to get a good and quick overview of the progress and project status, although having managerial presence may cause a \u201ctrigger\u201d effect and pollute the meeting\u2019s effectiveness.\n\n\n\n\nDuration\n\n\n\n\nNo more than 15 minutes.\n\n\nA good practice is to allow 2 minutes to each team member.\n\n\n\n\nTypical meeting roadmap\n\n\nEvery team member answers 3 questions:\n\n\n\n\n\n\nWhat I have accomplished since the last daily Scrum\n\n\nWhat I plan to accomplish between now and the next daily Scrum\n\n\nWhat (if anything) is impeding my progress\n\n\n\n\nNo discussion during the meeting. Only brief questions to clarify the previous list.\nAny subsequent discussion should take place after the meeting with the concerned team members.\n\n\nImportant to know / Good practices\n\n\n\n\nThe Daily Scrum is sometimes called \u201cDaily Stand Up\u201d. This name gives a good overview of the tone and shortness of this meeting.\n\n\nEach team member moves the tasks in the taskboard while speaking (if not done before)\n\n\nThe Sprint Burndown chart can be updated by the Scrum Master at the end of the meeting\n\n\nHaving a \u201cbeing blocked\u201d task list is useful. Personally I add a dedicated column in the taskboard\n\n\nOnly team members speak during the daily Scrum. Nobody else.\n\n\nTheDaily Scrum is a proof of the team\u2019s sef-organizing capacity as it shows how much team members collaborate together as they address themselves to the whole team (and not only the Scrum Master)\n\n\nIt is quite common to uncover additional tasks during the Sprint to achieve the Sprint Goal\n\n\n\n\nSprint Review Meeting \n1\n\n\n\n\nGoals\n\n\n\n\nAfter Sprint execution, the team holds a Sprint Review Meeting to demonstrate a working product increment to the Product Owner and everyone else who is interested.\n\n\nThe meeting should feature a live demonstration, not a report.\n\n\n\n\nAttendees\n\n\n\n\nProduct Team\n\n\nProduct Owner\n\n\n\n\nWhen\n\n\n\n\nAfter Sprint execution\n\n\n\n\nDuration\n\n\n\n\n4 hours\n\n\ngiven a 30-day Sprint (much longer than anyone recommends nowadays), the maximum time for a Sprint Review Meeting is 4 hours\n\n\n\n\n\n\n\n\nRoadmap\n\n\n\n\nDemonstration\n\n\nAfter the demonstration, the Product Owner reviews the commitments made at the Sprint Planning Meeting and declares which items he now considers done.\n\n\nFor example, a software item that is merely \u201ccode complete\u201d is considered not done, because untested software isn\u2019t shippable. Incomplete items are returned to the Product Backlog and ranked according to the Product Owner\u2019s revised priorities as candidates for future Sprints.\n\n\n\n\n\n\nThe ScrumMaster helps the Product Owner and stakeholders convert their feedback to new Product Backlog Items for prioritization by the Product Owner.\n\n\nOften, new scope discovery outpaces the team\u2019s rate of development. If the Product Owner feels that the newly discovered scope is more important than the original expectations, new scope displaces old scope in the Product Backlog.\n\n\n\n\n\n\n\n\nThe Sprint Review Meeting is the appropriate meeting for external stakeholders (even end users) to attend. It is the opportunity to inspect and adapt the product as it emerges, and iteratively refine everyone\u2019s understanding of the requirements. New products, particularly software products, are hard to visualize in a vacuum. Many customers need to be able to react to a piece of functioning software to discover what they will actually want. Iterative development, a value-driven approach, allows the creation of products that couldn\u2019t have been specified up front in a plan-driven approach.\n\n\nSprint Retrospective Meeting \n1\n \n2\n\n\n\n\nGoals\n\n\nAt this meeting, the team reflects on its own process. They inspect their behavior and take action to adapt it for future Sprints.\n\n\nWhen\n\n\nEach Sprint ends with a retrospective.\n\n\nDuration\n\n\n\n\n45 minutes\n\n\n\n\n\n\nRoadmap\n\n\n\n\nDedicated ScrumMasters will find alternatives to the stale, fearful meetings everyone has come to expect. An in-depth retrospective requires an environment of psychological safety not found in most organizations. Without safety, the retrospective discussion will either avoid the uncomfortable issues or deteriorate into blaming and hostility.\n\n\nA common impediment to full transparency on the team is the presence of people who conduct performance appraisals.\n\n\nAnother impediment to an insightful retrospective is the human tendency to jump to conclusions and propose actions too quickly. Agile Retrospectives, the most popular book on this topic, describes a series of steps to slow this process down: Set the stage, gather data, generate insights, decide what to do, close the retrospective. (1) Another guide recommended for ScrumMasters, The Art of Focused Conversations, breaks the process into similar steps: Objective, reflective, interpretive, and decisional (ORID). (2)\n\n\nA third impediment to psychological safety is geographic distribution. Geographically dispersed teams usually do not collaborate as well as those in team rooms.\n\n\nRetrospectives often expose organizational impediments. Once a team has resolved the impediments within its immediate influence, the ScrumMaster should work to expand that influence, chipping away at the organizational impediments.\n\n\nScrumMasters should use a variety of techniques to facilitate retrospectives, including silent writing, timelines, and satisfaction histograms. In all cases, the goals are to gain a common understanding of multiple perspectives and to develop actions that will take the team to the next level.\n\n\nProduct Backlog Refinement Meeting \n1\n\n\n\n\n\n\n\n\n\n\n\n\nHow to: A Great Product Backlog Refinement Workshop\n\n\n\n\n\n\nPRESENTATION: HOW OUR TEAM LIVES SCRUM", 
            "title": "Meetings"
        }, 
        {
            "location": "/meetings/#meetings", 
            "text": "", 
            "title": "Meetings"
        }, 
        {
            "location": "/meetings/#scrum-meetings-1", 
            "text": "Sprint Planning  Daily Scrum  Sprint Review  Sprint Retrospective  Product Backlog Refinement", 
            "title": "Scrum Meetings 1"
        }, 
        {
            "location": "/meetings/#sprint-planning-1", 
            "text": "", 
            "title": "Sprint Planning 1"
        }, 
        {
            "location": "/meetings/#goals", 
            "text": "\u2013 Discuss and make sure the whole team understands the upcoming Work Items to deliver (quantity, complexity)\n\u2013 Select the work items to achieve during the Sprint (Create the Sprint Backlog)\n\u2013 Rationally forecast the amount of work and commit to accomplish it\n\u2013 Plan how this work will be done", 
            "title": "Goals"
        }, 
        {
            "location": "/meetings/#attendees", 
            "text": "1st part (what?): Whole team  2nd part (how?): Even though the product owner does not attend, he should remain to answer questions.", 
            "title": "Attendees"
        }, 
        {
            "location": "/meetings/#duration", 
            "text": "The meeting is time-boxed: 2 hours / week of sprint duration.", 
            "title": "Duration"
        }, 
        {
            "location": "/meetings/#typical-meeting-roadmap", 
            "text": "In Scrum, the sprint planning meeting has two parts:  1. What work will be done?  \u2013 the Product Owner presents the ordered product backlog items to the development team\n\u2013 the whole Scrum team collaborates to understand the work and select work items starting from the top of the product backlog  2. How will the work be accomplished?  \u2013 the development team discusses to define how to produce the next product increment in accordance with the current Definition of Done\n\u2013 The team does just the sufficient design and planning to be confident of completing the work during the sprint\n\u2013 The upcoming work to be done in the early days is broken down into small tasks of one day or less\n\u2013 Work to be done later may be left in larger units to be decomposed later (this is called Just-In-Time planning in Lean)\n\u2013 Final commitment to do the work", 
            "title": "Typical meeting roadmap"
        }, 
        {
            "location": "/meetings/#important-to-know-good-practices", 
            "text": "\u2013 The development team is alone responsible to determine the number of product backlog items that will be \u201cpulled\u201d to the sprint. Nobody else should interfere in that decision, based on the current state of the project, the past performance and the current availability of the team.\n\u2013 It is a good practice to set a sprint goal to keep focus on the big picture and not on the details.\n\u2013 It is necessary for the Sprint planning meeting success that the product backlog is well ordered and refined. This is the Product Owner\u2019s responsibility.\n\u2013 The development team is responsible to decide how to do the work (self-organization).\n\u2013 There is no point, especially at the beginning, to try to make hourly estimates of the work and compare them to availability. This habit is inherited from traditional PM methods and may be counterproductive, as reduces ownership of the team\u2019s commitments. The best for the team is to intuitively estimate its own capacity to do the work, reduce the amount of committed work to deliver, and get experienced at estimating during the first sprints.", 
            "title": "Important to know / Good practices"
        }, 
        {
            "location": "/meetings/#daily-scrum-1", 
            "text": "", 
            "title": "Daily Scrum 1"
        }, 
        {
            "location": "/meetings/#goals_1", 
            "text": "Ensure, every day, at the same palace, that the team is on track for attaining the sprint goal and that team members are all on the same page.  Spot blocks and problems. The  Scrum Master  can resolve impediments that are beyond the team\u2019s control.  This is NOT a management reporting meeting to anyone. The  team members  communicate together as a team.  Based on what comes up in the meeting, the  development team  reorganizes the work as needed to accomplish the sprint goal.  Create transparency, trust and better performance. Build the team\u2019s self-organization and self-reliance.", 
            "title": "Goals"
        }, 
        {
            "location": "/meetings/#attendees_1", 
            "text": "Development Team + Scrum Master.  The Product Owner presence is not required but it I almost always interesting for him / here to be present, especially to clarify requirements if needed.  Other stakeholders can attend to get a good and quick overview of the progress and project status, although having managerial presence may cause a \u201ctrigger\u201d effect and pollute the meeting\u2019s effectiveness.", 
            "title": "Attendees"
        }, 
        {
            "location": "/meetings/#duration_1", 
            "text": "No more than 15 minutes.  A good practice is to allow 2 minutes to each team member.", 
            "title": "Duration"
        }, 
        {
            "location": "/meetings/#typical-meeting-roadmap_1", 
            "text": "Every team member answers 3 questions:    What I have accomplished since the last daily Scrum  What I plan to accomplish between now and the next daily Scrum  What (if anything) is impeding my progress   No discussion during the meeting. Only brief questions to clarify the previous list.\nAny subsequent discussion should take place after the meeting with the concerned team members.", 
            "title": "Typical meeting roadmap"
        }, 
        {
            "location": "/meetings/#important-to-know-good-practices_1", 
            "text": "The Daily Scrum is sometimes called \u201cDaily Stand Up\u201d. This name gives a good overview of the tone and shortness of this meeting.  Each team member moves the tasks in the taskboard while speaking (if not done before)  The Sprint Burndown chart can be updated by the Scrum Master at the end of the meeting  Having a \u201cbeing blocked\u201d task list is useful. Personally I add a dedicated column in the taskboard  Only team members speak during the daily Scrum. Nobody else.  TheDaily Scrum is a proof of the team\u2019s sef-organizing capacity as it shows how much team members collaborate together as they address themselves to the whole team (and not only the Scrum Master)  It is quite common to uncover additional tasks during the Sprint to achieve the Sprint Goal", 
            "title": "Important to know / Good practices"
        }, 
        {
            "location": "/meetings/#sprint-review-meeting-1", 
            "text": "", 
            "title": "Sprint Review Meeting 1"
        }, 
        {
            "location": "/meetings/#goals_2", 
            "text": "After Sprint execution, the team holds a Sprint Review Meeting to demonstrate a working product increment to the Product Owner and everyone else who is interested.  The meeting should feature a live demonstration, not a report.", 
            "title": "Goals"
        }, 
        {
            "location": "/meetings/#attendees_2", 
            "text": "Product Team  Product Owner", 
            "title": "Attendees"
        }, 
        {
            "location": "/meetings/#when", 
            "text": "After Sprint execution", 
            "title": "When"
        }, 
        {
            "location": "/meetings/#duration_2", 
            "text": "4 hours  given a 30-day Sprint (much longer than anyone recommends nowadays), the maximum time for a Sprint Review Meeting is 4 hours", 
            "title": "Duration"
        }, 
        {
            "location": "/meetings/#roadmap", 
            "text": "Demonstration  After the demonstration, the Product Owner reviews the commitments made at the Sprint Planning Meeting and declares which items he now considers done.  For example, a software item that is merely \u201ccode complete\u201d is considered not done, because untested software isn\u2019t shippable. Incomplete items are returned to the Product Backlog and ranked according to the Product Owner\u2019s revised priorities as candidates for future Sprints.    The ScrumMaster helps the Product Owner and stakeholders convert their feedback to new Product Backlog Items for prioritization by the Product Owner.  Often, new scope discovery outpaces the team\u2019s rate of development. If the Product Owner feels that the newly discovered scope is more important than the original expectations, new scope displaces old scope in the Product Backlog.     The Sprint Review Meeting is the appropriate meeting for external stakeholders (even end users) to attend. It is the opportunity to inspect and adapt the product as it emerges, and iteratively refine everyone\u2019s understanding of the requirements. New products, particularly software products, are hard to visualize in a vacuum. Many customers need to be able to react to a piece of functioning software to discover what they will actually want. Iterative development, a value-driven approach, allows the creation of products that couldn\u2019t have been specified up front in a plan-driven approach.", 
            "title": "Roadmap"
        }, 
        {
            "location": "/meetings/#sprint-retrospective-meeting-1-2", 
            "text": "", 
            "title": "Sprint Retrospective Meeting 1 2"
        }, 
        {
            "location": "/meetings/#goals_3", 
            "text": "At this meeting, the team reflects on its own process. They inspect their behavior and take action to adapt it for future Sprints.", 
            "title": "Goals"
        }, 
        {
            "location": "/meetings/#when_1", 
            "text": "Each Sprint ends with a retrospective.", 
            "title": "When"
        }, 
        {
            "location": "/meetings/#duration_3", 
            "text": "45 minutes", 
            "title": "Duration"
        }, 
        {
            "location": "/meetings/#roadmap_1", 
            "text": "Dedicated ScrumMasters will find alternatives to the stale, fearful meetings everyone has come to expect. An in-depth retrospective requires an environment of psychological safety not found in most organizations. Without safety, the retrospective discussion will either avoid the uncomfortable issues or deteriorate into blaming and hostility.  A common impediment to full transparency on the team is the presence of people who conduct performance appraisals.  Another impediment to an insightful retrospective is the human tendency to jump to conclusions and propose actions too quickly. Agile Retrospectives, the most popular book on this topic, describes a series of steps to slow this process down: Set the stage, gather data, generate insights, decide what to do, close the retrospective. (1) Another guide recommended for ScrumMasters, The Art of Focused Conversations, breaks the process into similar steps: Objective, reflective, interpretive, and decisional (ORID). (2)  A third impediment to psychological safety is geographic distribution. Geographically dispersed teams usually do not collaborate as well as those in team rooms.  Retrospectives often expose organizational impediments. Once a team has resolved the impediments within its immediate influence, the ScrumMaster should work to expand that influence, chipping away at the organizational impediments.  ScrumMasters should use a variety of techniques to facilitate retrospectives, including silent writing, timelines, and satisfaction histograms. In all cases, the goals are to gain a common understanding of multiple perspectives and to develop actions that will take the team to the next level.", 
            "title": "Roadmap"
        }, 
        {
            "location": "/meetings/#product-backlog-refinement-meeting-1", 
            "text": "How to: A Great Product Backlog Refinement Workshop    PRESENTATION: HOW OUR TEAM LIVES SCRUM", 
            "title": "Product Backlog Refinement Meeting 1"
        }
    ]
}