{
    "docs": [
        {
            "location": "/", 
            "text": "Platforms\n\n\n\n\nChrome Extensions\n\n\nCocos-2dx\n\n\nWeb\n\n\nAndroid", 
            "title": "Home"
        }, 
        {
            "location": "/#platforms", 
            "text": "Chrome Extensions  Cocos-2dx  Web  Android", 
            "title": "Platforms"
        }, 
        {
            "location": "/extension/", 
            "text": "Chrome Extension\n\n\nInstall an extension\n\n\nEvent Pages \n1\n\n\nA common need for apps and extensions is to have a single long-running script to manage some task or state. Event pages to the rescue. Event pages are loaded only when they are needed. When the event page is not actively doing something, it is unloaded, freeing memory and other system resources.\n\n\n\n\n\n\n\n\n\n\nEvent Pages", 
            "title": "Chrome Extension"
        }, 
        {
            "location": "/extension/#chrome-extension", 
            "text": "", 
            "title": "Chrome Extension"
        }, 
        {
            "location": "/extension/#install-an-extension", 
            "text": "", 
            "title": "Install an extension"
        }, 
        {
            "location": "/extension/#event-pages-1", 
            "text": "A common need for apps and extensions is to have a single long-running script to manage some task or state. Event pages to the rescue. Event pages are loaded only when they are needed. When the event page is not actively doing something, it is unloaded, freeing memory and other system resources.      Event Pages", 
            "title": "Event Pages 1"
        }, 
        {
            "location": "/cocos/", 
            "text": "Cocos-2dx\n\n\n1. Installation \n1\n\n\nItem: \nCocos-2dx 3.9\n, \nVisual Studio 2013 Ultimate\n, \nPython 2.7\n\n\nStep 1: Download and install items\n\n\nStep 2: Add \nenvironment variables\n\n\nexport COCOS_CONSOLE_ROOT=cocos2d-x-3.9\\tools\\cocos2d-console\\bin\nexport COCOS_TEMPLATES_ROOT=cocos2d-x-3.9\\templates\n\n\n\n\nStep 3: Install Cocos-2dx\n\n\ncd cocos2d-x-3.9\npython setup.py\n\n\n\n\n2. Hello World \n2\n\n\n2.1 Create \nhello world\n project\n\n\ncocos new MyGame -p com.MyCompany.MyGame -l cpp -d ~/MyCompany\n\n\n\n\n\n\nBe Patience! It takes me 2 minutes\n\n\n\n\n2.2 Run project\n\n\ncocos run -s ~/MyCompany/MyGame -p ios\n\n\n\n\n\n\nBe Patience! It takes me 5 minutes\n\n\n\n\n3. Physic Engines: Box2D\n\n\nCocos2d-x C++ Physics Tutorial 1 - What Is A Physics Engine?, Sonar Systems\n\n\n4. Graphics and Sounds\n\n\nhttp://kenney.nl/assets\n\n\nTexture Packer\n\n\n\n\n\n\n\n\n\n\ncocos2d-x.org, PreRequisites\n\n\n\n\n\n\ncocos2d-x.org, CREATING A NEW EXAMPLE PROJECT", 
            "title": "Cocos-2dx"
        }, 
        {
            "location": "/cocos/#cocos-2dx", 
            "text": "", 
            "title": "Cocos-2dx"
        }, 
        {
            "location": "/cocos/#1-installation-1", 
            "text": "Item:  Cocos-2dx 3.9 ,  Visual Studio 2013 Ultimate ,  Python 2.7  Step 1: Download and install items  Step 2: Add  environment variables  export COCOS_CONSOLE_ROOT=cocos2d-x-3.9\\tools\\cocos2d-console\\bin\nexport COCOS_TEMPLATES_ROOT=cocos2d-x-3.9\\templates  Step 3: Install Cocos-2dx  cd cocos2d-x-3.9\npython setup.py", 
            "title": "1. Installation 1"
        }, 
        {
            "location": "/cocos/#2-hello-world-2", 
            "text": "", 
            "title": "2. Hello World 2"
        }, 
        {
            "location": "/cocos/#21-create-hello-world-project", 
            "text": "cocos new MyGame -p com.MyCompany.MyGame -l cpp -d ~/MyCompany   Be Patience! It takes me 2 minutes", 
            "title": "2.1 Create hello world project"
        }, 
        {
            "location": "/cocos/#22-run-project", 
            "text": "cocos run -s ~/MyCompany/MyGame -p ios   Be Patience! It takes me 5 minutes", 
            "title": "2.2 Run project"
        }, 
        {
            "location": "/cocos/#3-physic-engines-box2d", 
            "text": "Cocos2d-x C++ Physics Tutorial 1 - What Is A Physics Engine?, Sonar Systems", 
            "title": "3. Physic Engines: Box2D"
        }, 
        {
            "location": "/cocos/#4-graphics-and-sounds", 
            "text": "http://kenney.nl/assets", 
            "title": "4. Graphics and Sounds"
        }, 
        {
            "location": "/cocos/#texture-packer", 
            "text": "cocos2d-x.org, PreRequisites    cocos2d-x.org, CREATING A NEW EXAMPLE PROJECT", 
            "title": "Texture Packer"
        }, 
        {
            "location": "/web/", 
            "text": "Web\n\n\nReceipts:\n\n\nUI: jqueyr, bootstrap\nHelper: underscore, sprintf, moment\nFramework: angularjs\n\n\nInstallation\n\n\nStep 1.1: Install all needed dependencies\n\n\n[code lang=\"bash\"]\nbower init\n\n\n\nAdd dependencies to `dependencies` in `bower.json` file\n\n\n\n\n\n\"jquery\": \"~2.2.3\",\n\"underscore\": \"~1.8.3\",\n\"moment\": \"~2.13.0\",\n\"sprintf\": \"~1.0.3\",\n\"angularjs\": \"~1.5.5\",\n\"bootstrap\": \"~3.3.6\"\n\n\n\n\nInstall dependencies\n\n\n\n\n\nbower install\n\n\n\nChange `index.html` file\n\n[code lang=\nhtml\n]\n\nscript src=\n./bower_components/jquery/dist/jquery.min.js\n/script\n\n\nscript src=\n./bower_components/bootstrap/dist/js/bootstrap.js\n/script\n\n\nscript src=\n./bower_components/sprintf/dist/sprintf.min.js\n/script\n\n\nscript src=\n./bower_components/underscore/underscore.js\n/script\n\n\n\n\n\nFast HTML Typing\n\n\nZen Coding\n\n\nWeb: Docker\n\n\nImage\n\n\nhttpd\n\n\nDockerfile\n\n\nFROM httpd:2.4\n\nCOPY ./app/ /usr/local/apache2/htdocs/\n\n\n\n\nCompose\n\n\nui:\n build: ./ui-app/.\n links:\n  - service\n ports:\n  - 80:80", 
            "title": "Web"
        }, 
        {
            "location": "/web/#web", 
            "text": "", 
            "title": "Web"
        }, 
        {
            "location": "/web/#receipts", 
            "text": "UI: jqueyr, bootstrap\nHelper: underscore, sprintf, moment\nFramework: angularjs", 
            "title": "Receipts:"
        }, 
        {
            "location": "/web/#installation", 
            "text": "Step 1.1: Install all needed dependencies  [code lang=\"bash\"]\nbower init  \nAdd dependencies to `dependencies` in `bower.json` file  \"jquery\": \"~2.2.3\",\n\"underscore\": \"~1.8.3\",\n\"moment\": \"~2.13.0\",\n\"sprintf\": \"~1.0.3\",\n\"angularjs\": \"~1.5.5\",\n\"bootstrap\": \"~3.3.6\"  \nInstall dependencies  bower install  \nChange `index.html` file\n\n[code lang= html ] script src= ./bower_components/jquery/dist/jquery.min.js /script  script src= ./bower_components/bootstrap/dist/js/bootstrap.js /script  script src= ./bower_components/sprintf/dist/sprintf.min.js /script  script src= ./bower_components/underscore/underscore.js /script", 
            "title": "Installation"
        }, 
        {
            "location": "/web/#fast-html-typing", 
            "text": "Zen Coding", 
            "title": "Fast HTML Typing"
        }, 
        {
            "location": "/web/#web-docker", 
            "text": "Image  httpd  Dockerfile  FROM httpd:2.4\n\nCOPY ./app/ /usr/local/apache2/htdocs/  Compose  ui:\n build: ./ui-app/.\n links:\n  - service\n ports:\n  - 80:80", 
            "title": "Web: Docker"
        }, 
        {
            "location": "/android/", 
            "text": "Android\n\n\nAndroid Architecture \n1\n\n\n\n\nFolder Structure\n\n\nA well-structured app \n2\n\n\n\n\nMake it easy and efficient to get things done.\n\n\nKeep related things together, and unrelated things seperate.\n\n\nActively manages complexity through consistent navigation\n\n\n\n\nAndroid Development Patterns\n\n\n\n\nMultiple Tasks with Concurrent Documents (Android Development Patterns)\n\n\n\n\nResources\n\n\n\n\n(Doc) Android Developer Training\n\n\n\n\nCourses\n\n\n\n\n(\u2605\u2605\u2605\u2605\u2605) \nProgramming Mobile Applications for Android Handheld Systems: Part 1\n\n\n\n\nAndroid: Layout\n\n\n#37 Android Layout Weight - Android Tutorial for Beginners [HD 1080p]\n\n\nAndroid: Saving Data\n\n\nhttp://ormlite.com/sqlite_java_android_orm.shtml\n\n\nUse \normlite\n (for ORM) and \nsqliteassethelper\n (for shipping with a database \n1\n)\n\n\nStep 1: Add library to \ngrandle\n\n\n[code]\ndependencies {\n    compile 'com.j256.ormlite:ormlite-core:4.47'\n    compile 'com.j256.ormlite:ormlite-android:4.47'\n\n\ncompile 'com.readystatesoftware.sqliteasset:sqliteassethelper:2.0.1'\n\n\n\n}\n[/code]\n\n\nStep 2: Create sqlite database\n\n\n\n\nCreate new folders \nassets/databases\n in your \nsrc/main\n folder\n\n\nCreate your database and save to \ndatabases\n folder\n\n\n\n\nStep 3: Create pojo in \nYourPojo.java\n\n\nStep 4: Create \nOrmDbHelper.java\n\n\nStep 5: Connect to your database in \nMainActivity.java\n\n\nSample project: Life\n\n\nAndroid: Sharing\n\n\nhttps://developers.facebook.com/quickstarts/573926429447471/?platform=android\n\n\nAndroid: View\n\n\nButton\n\n\nFloating Button\n\n\nhttps://github.com/makovkastar/FloatingActionButton\n\n\nTools\n\n\nApp Icon Generator\n\n\n\n\n\n\n\n\n\n\nHow to ship an Android application with a database?\n\n\n\n\n\n\nGoogle I/O 2013 - Structure in Android App Design", 
            "title": "Android"
        }, 
        {
            "location": "/android/#android", 
            "text": "Android Architecture  1", 
            "title": "Android"
        }, 
        {
            "location": "/android/#folder-structure", 
            "text": "A well-structured app  2   Make it easy and efficient to get things done.  Keep related things together, and unrelated things seperate.  Actively manages complexity through consistent navigation", 
            "title": "Folder Structure"
        }, 
        {
            "location": "/android/#android-development-patterns", 
            "text": "Multiple Tasks with Concurrent Documents (Android Development Patterns)", 
            "title": "Android Development Patterns"
        }, 
        {
            "location": "/android/#resources", 
            "text": "(Doc) Android Developer Training", 
            "title": "Resources"
        }, 
        {
            "location": "/android/#courses", 
            "text": "(\u2605\u2605\u2605\u2605\u2605)  Programming Mobile Applications for Android Handheld Systems: Part 1", 
            "title": "Courses"
        }, 
        {
            "location": "/android/#android-layout", 
            "text": "#37 Android Layout Weight - Android Tutorial for Beginners [HD 1080p]", 
            "title": "Android: Layout"
        }, 
        {
            "location": "/android/#android-saving-data", 
            "text": "http://ormlite.com/sqlite_java_android_orm.shtml  Use  ormlite  (for ORM) and  sqliteassethelper  (for shipping with a database  1 )  Step 1: Add library to  grandle  [code]\ndependencies {\n    compile 'com.j256.ormlite:ormlite-core:4.47'\n    compile 'com.j256.ormlite:ormlite-android:4.47'  compile 'com.readystatesoftware.sqliteasset:sqliteassethelper:2.0.1'  }\n[/code]  Step 2: Create sqlite database   Create new folders  assets/databases  in your  src/main  folder  Create your database and save to  databases  folder   Step 3: Create pojo in  YourPojo.java  Step 4: Create  OrmDbHelper.java  Step 5: Connect to your database in  MainActivity.java  Sample project: Life", 
            "title": "Android: Saving Data"
        }, 
        {
            "location": "/android/#android-sharing", 
            "text": "https://developers.facebook.com/quickstarts/573926429447471/?platform=android", 
            "title": "Android: Sharing"
        }, 
        {
            "location": "/android/#android-view", 
            "text": "", 
            "title": "Android: View"
        }, 
        {
            "location": "/android/#button", 
            "text": "Floating Button  https://github.com/makovkastar/FloatingActionButton", 
            "title": "Button"
        }, 
        {
            "location": "/android/#tools", 
            "text": "App Icon Generator      How to ship an Android application with a database?    Google I/O 2013 - Structure in Android App Design", 
            "title": "Tools"
        }
    ]
}